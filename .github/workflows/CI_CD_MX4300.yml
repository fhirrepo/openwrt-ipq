name: CI_CD MX4300 NSS Build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build/rebase (e.g. main-nss, 24.10-nss)"
        required: true
        default: "main"

jobs:
    build:
        name: MX4300 NSS Build
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Show selected branch
              run: echo "Building branch:${{ github.event.inputs.branch }}"

            - name: Show available disk space before cleanup
              run: |
                  echo "Available disk space before cleanup:"
                  df -h

            - name: Free up disk space
              run: |
                  echo "Removing unnecessary apt packages and cache..."
                  sudo apt-get autoremove -y
                  sudo apt-get clean
                  sudo rm -rf /var/lib/apt/lists/*

                  echo "Removing Android SDK..."
                  sudo rm -rf /usr/local/lib/android

                  echo "Removing .NET Core..."
                  sudo rm -rf /usr/share/dotnet

                  echo "Removing PowerShell..."
                  sudo rm -rf /opt/microsoft/powershell

                  echo "Removing CodeQL Analysis..."
                  sudo rm -rf /opt/hostedtoolcache/CodeQL

                  echo "Removing Docker images..."
                  docker image prune -a -f

                  echo "Removing unused snap packages..."
                  sudo rm -rf /var/lib/snapd/cache/*

                  echo "Removing unused Homebrew packages..."
                  sudo rm -rf /home/linuxbrew/.linuxbrew/

                  echo "Removing unused build tools..."
                  sudo rm -rf /usr/local/share/boost
                  sudo rm -rf /usr/local/lib/node_modules
                  sudo rm -rf /usr/share/swift
                  sudo rm -rf /usr/share/kotlin
                  sudo rm -rf /usr/share/rust

                  echo "Removing TeamCity and Azul Systems content..."
                  sudo rm -rf /opt/az
                  sudo rm -rf /opt/hostedtoolcache/Java_Adopt_jdk
                  sudo rm -rf /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk

                  echo "Removing large cached content..."
                  sudo rm -rf /var/cache/apt
                  sudo rm -rf /var/lib/gems
                  sudo rm -rf /var/lib/docker/tmp/*
                  sudo rm -rf /usr/local/lib/python*/dist-packages
                  sudo rm -rf /usr/local/lib/python*/site-packages
                  sudo rm -rf /opt/hostedtoolcache/*/*

            - name: Show available disk space after cleanup
              run: |
                     echo "Available disk space after cleanup:"
                     df -h

            - name: Show kernel, gcc version, CPU core count, total memory
              run: |
                    echo "Show kernel version:"
                      uname -a
                      echo "Show gcc version:"
                      gcc --version
                      echo "Show CPU core count:"
                      nproc
                      echo "Show CPU model"
                      cat /proc/cpuinfo | grep "model name" | head -1
                      echo "Show Total memory:"
                      free -h

            - name: Set up build dependencies
              run: |
                sudo apt update
                sudo apt install -y build-essential clang flex bison g++ gawk \
                    gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
                    python3-setuptools rsync swig unzip zlib1g-dev file wget

            - name: Checkout
              uses: actions/checkout@v4
              with:
                ref: ${{ github.event.inputs.branch }}
                fetch-depth: 0

            - name: Set Git identity
              run: |
                    git config user.name "github-actions"
                    git config user.email "github-actions@github.com"

            - name: Sync with immediate upstream fork
              run: |
                BRANCH=${{ github.event.inputs.branch }}
                git remote add upstream https://github.com/qosmio/openwrt-ipq.git
                git fetch upstream
                git checkout "$BRANCH"
                git rebase "upstream/$BRANCH" || true
                git push origin "$BRANCH" --force-with-lease

            - name: Clone config
              run: git clone https://${{ secrets.PAT }}@github.com/fhirrepo/custom_openwrt.git files/etc/uci-defaults && rm -rf files/etc/uci-defaults/.git && rm -rf files/etc/uci-defaults/*.yml

            - name: Update feeds
              # run:  make package/symlinks
              run: cp feeds.conf.default feeds.conf
               && scripts/feeds update -a
               && scripts/feeds install -a

            - name: Generate MX4300 NSS Config
              run: cp nss-setup/config-nss.seed .config
               && sed -i 's/# CONFIG_TARGET_qualcommax_ipq807x_DEVICE_linksys_mx4300 is not set/CONFIG_TARGET_qualcommax_ipq807x_DEVICE_linksys_mx4300=y/g' .config
               && echo "CONFIG_PACKAGE_block-mount=y" >> .config
               && echo "CONFIG_PACKAGE_kmod-usb-storage-uas=y" >> .config
               && echo "CONFIG_PACKAGE_luci-app-dockerman=y" >> .config
               && echo "CONFIG_PACKAGE_dockerd=y" >> .config
               && echo "CONFIG_PACKAGE_docker-compose=y" >> .config
               && echo "CONFIG_PACKAGE_docker=y" >> .config
               && echo "CONFIG_PACKAGE_openssh-sftp-server=y" >> .config
               && echo "CONFIG_PACKAGE_coreutils-nohup=y" >> .config

            - name: Build Config
              run: make defconfig V=s -j$(nproc)

            - name: Build Images
              run: make V=s -j$(nproc)

            - name: Set current date as env variable
              run: echo "CUR_DATE=$(date +'%Y-%m-%d-T%H%M')" >> $GITHUB_ENV

            - name: Get SHORT SHA
              run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

            - name: Release
              uses: ncipollo/release-action@v1
              with:
                tag: mx4300-${{ github.event.inputs.branch }}--${{ env.CUR_DATE }}--${{ env.SHORT_SHA }}
                artifacts: bin/targets/qualcommax/ipq807x/openwrt-qualcommax-ipq807x*.bin,bin/targets/qualcommax/ipq807x/openwrt-qualcommax-ipq807x-linksys_mx4300.manifest,.config
