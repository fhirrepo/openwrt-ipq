name: test NSS Build

on: workflow_dispatch

jobs:
    build:
        name: test NSS Build
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:

            - name: Set up build dependencies
              run: |
                sudo apt update
                sudo apt install -y build-essential clang flex bison g++ gawk \
                    gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
                    python3-setuptools rsync swig unzip zlib1g-dev file wget

            - name: Checkout
              uses: actions/checkout@v4
              with:
                 ref: main
                 fetch-depth: 0

            - name: Sync with immediate upstream fork (main-nss branch)
              run: |
                    git remote add upstream https://github.com/qosmio/openwrt-ipq.git
                    git fetch upstream

                    # Checkout your branch
                    git checkout main

                    # Rebase onto upstream's branch of the same name
                    git rebase upstream/main || true

                    # Push the rebased branch back to your fork
                    git push origin main --force-with-lease

            - name: Clone config
              run: git clone https://${{ secrets.PAT }}@github.com/fhirrepo/custom_openwrt.git files/etc/uci-defaults && rm -rf files/etc/uci-defaults/.git && rm -rf files/etc/uci-defaults/*.yml

            - name: Update feeds
              # run:  make package/symlinks
              run: cp feeds.conf.default feeds.conf
               && scripts/feeds update -a
               && scripts/feeds install -a

            - name: Generate MX4300 NSS Config
              run: cp nss-setup/config-nss.seed .config
               && sed -i 's/# CONFIG_TARGET_qualcommax_ipq807x_DEVICE_linksys_mx4300 is not set/CONFIG_TARGET_qualcommax_ipq807x_DEVICE_linksys_mx4300=y/g' .config
               && echo "CONFIG_PACKAGE_block-mount=y" >> .config
               && echo "CONFIG_PACKAGE_kmod-usb-storage-uas=y" >> .config
               && echo "CONFIG_PACKAGE_luci-app-dockerman=y" >> .config
               && echo "CONFIG_PACKAGE_dockerd=y" >> .config
               && echo "CONFIG_PACKAGE_docker-compose=y" >> .config
               && echo "CONFIG_PACKAGE_docker=y" >> .config
               && echo "CONFIG_PACKAGE_openssh-sftp-server=y" >> .config
               && echo "CONFIG_PACKAGE_coreutils-nohup=y" >> .config

            - name: Build Config
              run: make defconfig V=s -j$(nproc)
